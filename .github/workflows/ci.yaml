#name: Maven CI
#
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master
#
#jobs:
#  build-and-publish:
#    runs-on: ubuntu-latest
#
#    permissions:
#      packages: write
#      contents: read
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'temurin'
#
#      - name: Install Maven
#        run: sudo apt-get update && sudo apt-get install -y maven
#
#      - name: Configure Maven settings
#        run: |
#          mkdir -p ~/.m2
#          echo "<settings>
#                  <servers>
#                    <server>
#                      <id>github</id>
#                      <username>${{ github.actor }}</username>
#                      <password>${{ secrets.GITHUB_TOKEN }}</password>
#                    </server>
#                  </servers>
#                </settings>" > ~/.m2/settings.xml
#
#      - name: Build with Maven (skip tests)
#        run: mvn -B clean package -DskipTests -Dmaven.test.skip=true --file pom.xml
#
#      - name: Clear local Maven repository
#        run: rm -rf ~/.m2/repository/com/sentifraud/
#
#      - name: Publish to GitHub Packages
#        run: mvn deploy
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Upload build artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: build-artifacts
#          path: target/*.jar

name: Maven CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: write # Required to push to gh-pages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ secrets.GITHUB_TOKEN }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml

      - name: Build with Maven (skip tests)
        run: mvn -B clean package -DskipTests -Dmaven.test.skip=true --file pom.xml

      - name: Clear local Maven repository
        run: rm -rf ~/.m2/repository/com/sentifraud/

      - name: Publish to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/*.jar

      - name: Generate Javadocs
        run: mvn javadoc:javadoc

      - name: Deploy Javadocs to GitHub Pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Create a temporary directory for the gh-pages branch
          mkdir -p gh-pages-temp

          # Copy the generated Javadocs to the temporary directory
          cp -r target/site/apidocs/* gh-pages-temp/

          # Check if the gh-pages branch exists
          if git ls-remote --exit-code --heads origin gh-pages; then
            # If the branch exists, check it out
            git fetch origin gh-pages
            git checkout gh-pages --
          else
            # If the branch does not exist, create it as an orphan branch
            git checkout --orphan gh-pages
            git rm -rf . || true
          fi

          # Remove existing files (except .git)
          git rm -rf . || true

          # Add the new Javadocs
          cp -r gh-pages-temp/* .
          git add .

          # Commit and force-push the changes
          git commit -m "Deploy Javadocs for ${{ github.sha }}"
          git push --force origin gh-pages